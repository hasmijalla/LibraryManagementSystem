package libraryManagementNew;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import net.proteanit.sql.DbUtils;

public class Fines extends javax.swing.JFrame {

    /**
     * Creates new form Fines
     */
	private TableRowSorter sorter;
    public Fines() {
        initComponents();
        dateCheckedIn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        finesSearchTxt = new javax.swing.JTextField();
        finesSearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        finesTable = new javax.swing.JTable();
        payfinebtn = new javax.swing.JButton();
        homefines = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tekton Pro", 3, 24)); // NOI18N
        jLabel1.setText("Fines");

        finesSearchBtn.setText("Search");
        finesSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finesSearchBtnActionPerformed(evt);
            }
        });

        finesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Borrower ID", "Fine Amount", "Paid"
            }
        ));
        finesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(finesTable);

        payfinebtn.setText("Pay Fine");
        payfinebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payfinebtnActionPerformed(evt);
            }
        });

        homefines.setText("Home");
        homefines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homefinesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(finesSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(finesSearchBtn)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166))))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(payfinebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homefines))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finesSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finesSearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payfinebtn)
                    .addComponent(homefines))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        try{
            Connection conn = DBConnection.connect();
            Statement st = conn.createStatement();
            String query = "select bl.card_no,sum(f.fine_amount) from library.book_loans bl inner join library.fines f on bl.loan_id = f.loan_id where f.fine_paid = 0 group by 1;";
            ResultSet rs = st.executeQuery(query);
            finesTable.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();
    
            }
            catch(Exception e){
                    e.printStackTrace();
            }

            sorter = new TableRowSorter<>(finesTable.getModel());
            finesTable.setRowSorter(sorter);
            finesSearchTxt.getDocument().addDocumentListener(new DocumentListener() {
         @Override
         public void insertUpdate(DocumentEvent e) {
            search(finesSearchTxt.getText());
         }
         @Override
         public void removeUpdate(DocumentEvent e) {
            search(finesSearchTxt.getText());
         }
         @Override
         public void changedUpdate(DocumentEvent e) {
            search(finesSearchTxt.getText());
         }
         public void search(String str) {
            if (str.length() == 0) {
               sorter.setRowFilter(null);
            } else {
               sorter.setRowFilter(RowFilter.regexFilter(str));
            }
         }
      });

        pack();
    }// </editor-fold>                        
    public String selectedCardNumber;
    private void finesSearchBtnActionPerformed(java.awt.event.ActionEvent evt) { 
    	String inputString = finesSearchTxt.getText();
    	finesTable.setVisible(true);
    	try {
			// JDBC Connection
			Connection connect = DBConnection.connect();
			Statement st = connect.createStatement();
			String query;
			if(inputString == null) {
				 query = "select bl.card_no,sum(f.fine_amount) from library.book_loans bl inner join library.fines f on bl.loan_id = f.loan_id where f.fine_paid = 0 group by 1;";
			}
			else {
			 query = "select bl.card_no,sum(f.fine_amount) from library.book_loans bl inner join library.fines f on bl.loan_id = f.loan_id where f.fine_paid = 0 and bl.card_no like '%" +inputString+ "%' group by 1;";
			}
			ResultSet resSet = st.executeQuery(query);
			finesTable.setModel(DbUtils.resultSetToTableModel(resSet));
			resSet.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
    	
    //when the fine is selected to pay
    private void finesTableMouseClicked(java.awt.event.MouseEvent evt) {
    	
		int row = finesTable.getSelectedRow();
		DefaultTableModel defTableModel = (DefaultTableModel) finesTable.getModel();
		selectedCardNumber = defTableModel.getValueAt(row, 0).toString();

    }    
    
    //when the pay fine button is clicked
    private void payfinebtnActionPerformed(java.awt.event.ActionEvent evt) {                                                
        try{
            Connection connect = DBConnection.connect();
            Statement st = connect.createStatement();
            String query = "update FINES SET FINE_PAID=1 WHERE LOAN_ID IN (SELECT LOAN_ID FROM BOOK_LOANS WHERE CARD_NO = \""+selectedCardNumber+"\" );";
             System.out.println(query);
            int exec = st.executeUpdate(query);
            System.out.println(exec);

            if(exec==1)
            {
                JOptionPane.showMessageDialog(null, "Fine Cleared!");

				/*
				 * Connection conn = DBConnection.connect(); st = conn.createStatement(); query
				 * =
				 * "select bl.card_no,sum(f.fine_amount) from library.book_loans bl inner join library.fines f on bl.loan_id = f.loan_id where f.fine_paid = 0 group by 1;"
				 * ; ResultSet rs = st.executeQuery(query);
				 * finesTable.setModel(DbUtils.resultSetToTableModel(rs)); rs.close();
				 */
                LibraryManagement home = LibraryManagement.home();
                
            }
            else{
            	
            	JOptionPane.showMessageDialog(null, "Error! Please Try Again");
            }
            }
            catch(Exception e){
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error! Please Try Again");
            }
    }                                          

    //to return home
    private void homefinesActionPerformed(java.awt.event.ActionEvent evt) {
    	LibraryManagement home = LibraryManagement.home();
        // TODO add your handling code here:
    }        
    public void dateCheckedIn() {
		try {
			System.out.println("inside datecheckedIn");
			Connection conn = DBConnection.connect();
			Statement stmt = conn.createStatement();
			String query = "select *,DATEDIFF(DATE_IN,DUE_DATE) AS DATDIFF from book_loans where DUE_DATE < DATE_IN;";
			ResultSet getSetRS = stmt.executeQuery(query);
			while (getSetRS.next()) {
				int loanId = getSetRS.getInt("loan_id");
				int dateDiff = getSetRS.getInt("DATDIFF");
				update(loanId, dateDiff);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void update(int loanId, int dateDiff) {
		 double fineAmt = dateDiff*0.25;
	        try{

	        Connection conn = DBConnection.connect();
	        Statement statmt = conn.createStatement();
	        String query = " INSERT INTO FINES (LOAN_ID, FINE_AMOUNT) VALUES("+loanId+","+fineAmt+") ON DUPLICATE KEY UPDATE FINE_AMOUNT = "+fineAmt+";";
	         int r = statmt.executeUpdate(query);
	        }
	        catch(Exception e)
	        {
	            e.printStackTrace();
	        }
	         
	}

                                

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton finesSearchBtn;
    private javax.swing.JTextField finesSearchTxt;
    private javax.swing.JButton homefines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable finesTable;
    private javax.swing.JButton payfinebtn;
    // End of variables declaration                   
}
